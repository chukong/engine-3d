material texturedflat
{
	u_ligthPos = 0.0, 0.0, 0.0
	u_lightInvWorld = 0.0, 0.0, 0.0, 0.0,  0.0, 0.0, 0.0, 0.0,  0.0, 0.0, 0.0, 0.0,  0.0, 0.0, 0.0, 0.0
    u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX

    sampler u_diffuseTexture
    {
        path = scene/1/ChangJing_DiMian.png
        mipmap = false
        wrapS = CLAMP
        wrapT = CLAMP
        minFilter = LINEAR
        magFilter = LINEAR
    }

    technique
    {
        pass
        {
            u_worldMatrix = WORLD_MATRIX
            u_inverseTransposeWorldMatrix = INVERSE_TRANSPOSE_WORLD_MATRIX

			u_ambientColor = 0.8, 0.8, 0.8
			u_specularExponent = 16

            vertexShader = shaders/projected_texture.vsh
            fragmentShader = shaders/projected_texture.fsh
            defines = MAXPOINTLIGHT 1;PTLIGHT
			
			samplerCube u_shellTex
			{
				path_left	= demo/magiclight/LanternF_2.png
				path_right	= demo/magiclight/LanternF_1.png
				path_top	= demo/magiclight/LanternF_5.png
				path_bottom = demo/magiclight/LanternF_6.png
				path_front	= demo/magiclight/LanternF_3.png
				path_back	= demo/magiclight/LanternF_4.png
				
				wrapS = MIRROR
				wrapT = MIRROR
			}
			
            renderState
            {
                cullFace = true
                depthTest = true
                depthWrite = true
                blend = false
            }
        }
    }

    technique _castshadow
    {
        pass
        {
            vertexShader = shaders/textured.vsh
            fragmentShader = shaders/writedepth.fsh

            renderState
            {
                cullFace = true
                depthTest = true
                depthWrite = true
                blend = false
            }
        }
    }
}